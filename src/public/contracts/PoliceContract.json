{
  "contractName": "PoliceContract",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "claimId",
          "type": "bytes32"
        },
        {
          "name": "_bigchainHash",
          "type": "bytes"
        },
        {
          "name": "_timeStamp",
          "type": "uint256"
        }
      ],
      "name": "addClaim",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "policeRegistry",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32"
        }
      ],
      "name": "getSignatures",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32"
        },
        {
          "name": "_newBigchain_hash",
          "type": "bytes"
        }
      ],
      "name": "signDocument",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "claimS",
      "outputs": [
        {
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "name": "bigchain_hash",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32"
        }
      ],
      "name": "getBigchainHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32"
        },
        {
          "name": "_newBigchain_hash",
          "type": "bytes"
        }
      ],
      "name": "addPoliceReport",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newPoliceAddress",
          "type": "address"
        }
      ],
      "name": "addPoliceAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405273ca35b7d915458ef540ade6068dfe2f44e8fa730e600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b50600180600073ca35b7d915458ef540ade6068dfe2f44e8fa733b73ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c0e806100ca6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063068d4cc8146100935780632c10e91214610130578063605a4dd21461018b5780639bc5106814610202578063a4c96e7514610288578063b52c6dd1146102ff578063da2b758214610342578063f7e13da8146103f3575b600080fd5b34801561009f57600080fd5b506101126004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505061049d565b60405180826000191660001916815260200191505060405180910390f35b34801561013c57600080fd5b50610171600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105a8565b604051808215151515815260200191505060405180910390f35b34801561019757600080fd5b506102006004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506105c8565b005b34801561020e57600080fd5b50610231600480360381019080803560001916906020019092919050505061065d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610274578082015181840152602081019050610259565b505050509050019250505060405180910390f35b34801561029457600080fd5b506102fd6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610708565b005b34801561030b57600080fd5b50610340600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bf565b005b34801561034e57600080fd5b506103716004803603810190808035600019169060200190929190505050610875565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103b757808201518184015260208101905061039c565b50505050905090810190601f1680156103e45780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103ff57600080fd5b506104226004803603810190808035600019169060200190929190505050610931565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610462578082015181840152602081019050610447565b50505050905090810190601f16801561048f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000606060016040519080825280602002602001820160405280156104d15781602001602082028038833980820191505090505b509050338160008151811015156104e457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060606040519081016040528084815260200185815260200182815250600080876000191660001916815260200190815260200160002060008201518160000155602082015181600101908051906020019061057c9291906109f0565b506040820151816002019080519060200190610599929190610a70565b50905050849150509392505050565b60016020528060005260406000206000915054906101000a900460ff1681565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561062757600080fd5b8060008084600019166000191681526020019081526020016000206001019080519060200190610658929190610afa565b505050565b606060008083600019166000191681526020019081526020016000206002018054806020026020016040519081016040528092919081815260200182805480156106fc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b2575b50505050509050919050565b8060008084600019166000191681526020019081526020016000206001019080519060200190610739929190610afa565b5060008083600019166000191681526020019081526020016000206002013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081b57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109275780601f106108fc57610100808354040283529160200191610927565b820191906000526020600020905b81548152906001019060200180831161090a57829003601f168201915b5050505050905082565b606060008083600019166000191681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e45780601f106109b9576101008083540402835291602001916109e4565b820191906000526020600020905b8154815290600101906020018083116109c757829003601f168201915b50505050509050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a3157805160ff1916838001178555610a5f565b82800160010185558215610a5f579182015b82811115610a5e578251825591602001919060010190610a43565b5b509050610a6c9190610b7a565b5090565b828054828255906000526020600020908101928215610ae9579160200282015b82811115610ae85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a90565b5b509050610af69190610b9f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b3b57805160ff1916838001178555610b69565b82800160010185558215610b69579182015b82811115610b68578251825591602001919060010190610b4d565b5b509050610b769190610b7a565b5090565b610b9c91905b80821115610b98576000816000905550600101610b80565b5090565b90565b610bdf91905b80821115610bdb57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610ba5565b5090565b905600a165627a7a723058209dd015843fcbc0b875667d3d100b3d57b894aba897b86e78e9128ba39b7047700029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063068d4cc8146100935780632c10e91214610130578063605a4dd21461018b5780639bc5106814610202578063a4c96e7514610288578063b52c6dd1146102ff578063da2b758214610342578063f7e13da8146103f3575b600080fd5b34801561009f57600080fd5b506101126004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505061049d565b60405180826000191660001916815260200191505060405180910390f35b34801561013c57600080fd5b50610171600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105a8565b604051808215151515815260200191505060405180910390f35b34801561019757600080fd5b506102006004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506105c8565b005b34801561020e57600080fd5b50610231600480360381019080803560001916906020019092919050505061065d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610274578082015181840152602081019050610259565b505050509050019250505060405180910390f35b34801561029457600080fd5b506102fd6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610708565b005b34801561030b57600080fd5b50610340600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107bf565b005b34801561034e57600080fd5b506103716004803603810190808035600019169060200190929190505050610875565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103b757808201518184015260208101905061039c565b50505050905090810190601f1680156103e45780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103ff57600080fd5b506104226004803603810190808035600019169060200190929190505050610931565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610462578082015181840152602081019050610447565b50505050905090810190601f16801561048f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000606060016040519080825280602002602001820160405280156104d15781602001602082028038833980820191505090505b509050338160008151811015156104e457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060606040519081016040528084815260200185815260200182815250600080876000191660001916815260200190815260200160002060008201518160000155602082015181600101908051906020019061057c9291906109f0565b506040820151816002019080519060200190610599929190610a70565b50905050849150509392505050565b60016020528060005260406000206000915054906101000a900460ff1681565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514151561062757600080fd5b8060008084600019166000191681526020019081526020016000206001019080519060200190610658929190610afa565b505050565b606060008083600019166000191681526020019081526020016000206002018054806020026020016040519081016040528092919081815260200182805480156106fc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b2575b50505050509050919050565b8060008084600019166000191681526020019081526020016000206001019080519060200190610739929190610afa565b5060008083600019166000191681526020019081526020016000206002013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081b57600080fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109275780601f106108fc57610100808354040283529160200191610927565b820191906000526020600020905b81548152906001019060200180831161090a57829003601f168201915b5050505050905082565b606060008083600019166000191681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e45780601f106109b9576101008083540402835291602001916109e4565b820191906000526020600020905b8154815290600101906020018083116109c757829003601f168201915b50505050509050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a3157805160ff1916838001178555610a5f565b82800160010185558215610a5f579182015b82811115610a5e578251825591602001919060010190610a43565b5b509050610a6c9190610b7a565b5090565b828054828255906000526020600020908101928215610ae9579160200282015b82811115610ae85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a90565b5b509050610af69190610b9f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b3b57805160ff1916838001178555610b69565b82800160010185558215610b69579182015b82811115610b68578251825591602001919060010190610b4d565b5b509050610b769190610b7a565b5090565b610b9c91905b80821115610b98576000816000905550600101610b80565b5090565b90565b610bdf91905b80821115610bdb57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610ba5565b5090565b905600a165627a7a723058209dd015843fcbc0b875667d3d100b3d57b894aba897b86e78e9128ba39b7047700029",
  "sourceMap": "64:791:3:-;;;193:42;171:64;;;;;;;;;;;;;;;;;;;;245:108;8:9:-1;5:2;;;30:1;27;20:12;5:2;245:108:3;340:4;279:14;:58;294:42;279:58;;;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;64:791;;;;;;",
  "deployedSourceMap": "64:791:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:409:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:409:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;117:47:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;117:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:320;;8:9:-1;5:2;;;30:1;27;20:12;5:2;361:320:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:126:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1076:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1076:126:0;;;;;;;;;;;;;;;;;782:286;;8:9:-1;5:2;;;30:1;27;20:12;5:2;782:286:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;689:163:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;689:163:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:39:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;266:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1210:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1210:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1210:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:409;455:7;475:23;515:1;501:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;501:16:0;;;;475:42;;540:10;528:6;535:1;528:9;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;664:40;;;;;;;;;670:10;664:40;;;;682:13;664:40;;;;697:6;664:40;;;646:6;:15;653:7;646:15;;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;759:7;752:14;;365:409;;;;;;:::o;117:47:3:-;;;;;;;;;;;;;;;;;;;;;;:::o;361:320::-;543:4;513:34;;:14;:26;528:10;513:26;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;505:43;;;;;;;;656:17;623:6;:16;630:8;623:16;;;;;;;;;;;;;;;;;:30;;:50;;;;;;;;;;;;:::i;:::-;;361:320;;:::o;1076:126:0:-;1138:9;1167:6;:16;1174:8;1167:16;;;;;;;;;;;;;;;;;:27;;1160:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:126;;;:::o;782:286::-;988:17;955:6;:16;962:8;955:16;;;;;;;;;;;;;;;;;:30;;:50;;;;;;;;;;;;:::i;:::-;;1016:6;:16;1023:8;1016:16;;;;;;;;;;;;;;;;;:27;;1049:10;1016:44;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1016:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:286;;:::o;689:163:3:-;781:11;;;;;;;;;;;767:25;;:10;:25;;;759:34;;;;;;;;840:4;804:14;:33;819:17;804:33;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;689:163;:::o;266:39:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1210:127::-;1274:5;1299:6;:16;1306:8;1299:16;;;;;;;;;;;;;;;;;:30;;1292:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1210:127;;;:::o;64:791:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.4;\r\n\r\nimport \"./AgreementContract.sol\";\r\n\r\ncontract PoliceContract is AgreementContract{\r\n\r\n    mapping (address => bool) public policeRegistry;\r\n    address policeAdmin = 0xca35b7d915458ef540ade6068dfe2f44e8fa730e;\r\n\r\n     constructor() public{\r\n           policeRegistry[0xca35b7d915458ef540ade6068dfe2f44e8fa733b] = true;\r\n     }\r\n\r\n    function addPoliceReport(bytes32 _claimId, bytes _newBigchain_hash) public {\r\n       // accidentParties[msg.sender].push(agreementId);\r\n        require(policeRegistry[msg.sender] == true);\r\n        //require(claimS[_claimId].currentStage == \"initial\");\r\n        claimS[_claimId].bigchain_hash = _newBigchain_hash;\r\n    }\r\n\r\n    function addPoliceAddress(address _newPoliceAddress) public{\r\n        require(msg.sender == policeAdmin);\r\n        policeRegistry[_newPoliceAddress] = true;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\jeshw\\blockinsurance\\contracts\\blockinsurance\\PoliceContract.sol",
  "ast": {
    "absolutePath": "/C/Users/jeshw/blockinsurance/contracts/blockinsurance/PoliceContract.sol",
    "exportedSymbols": {
      "PoliceContract": [
        247
      ]
    },
    "id": 248,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 183,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/C/Users/jeshw/blockinsurance/contracts/blockinsurance/AgreementContract.sol",
        "file": "./AgreementContract.sol",
        "id": 184,
        "nodeType": "ImportDirective",
        "scope": 248,
        "sourceUnit": 107,
        "src": "27:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 185,
              "name": "AgreementContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 106,
              "src": "91:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AgreementContract_$106",
                "typeString": "contract AgreementContract"
              }
            },
            "id": 186,
            "nodeType": "InheritanceSpecifier",
            "src": "91:17:3"
          }
        ],
        "contractDependencies": [
          106
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 247,
        "linearizedBaseContracts": [
          247,
          106
        ],
        "name": "PoliceContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 190,
            "name": "policeRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 247,
            "src": "117:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 189,
              "keyType": {
                "id": 187,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "126:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "117:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 188,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "137:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 193,
            "name": "policeAdmin",
            "nodeType": "VariableDeclaration",
            "scope": 247,
            "src": "171:64:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 191,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "171:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307863613335623764393135343538656635343061646536303638646665326634346538666137333065",
              "id": 192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "193:42:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1154414090619811796818182302139415280051214250766_by_1",
                "typeString": "int_const 1154...(41 digits omitted)...0766"
              },
              "value": "0xca35b7d915458ef540ade6068dfe2f44e8fa730e"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "265:88:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "policeRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "279:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 198,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "307863613335623764393135343538656635343061646536303638646665326634346538666137333362",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "294:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1154414090619811796818182302139415280051214250811_by_1",
                          "typeString": "int_const 1154...(41 digits omitted)...0811"
                        },
                        "value": "0xca35b7d915458ef540ade6068dfe2f44e8fa733b"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "279:58:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "340:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "279:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "279:65:3"
                }
              ]
            },
            "documentation": null,
            "id": 203,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "265:0:3"
            },
            "scope": 247,
            "src": "245:108:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "436:245:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 211,
                            "name": "policeRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "513:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 214,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 212,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "528:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "528:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "513:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "543:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "513:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        265,
                        266
                      ],
                      "referencedDeclaration": 265,
                      "src": "505:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "505:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 219,
                          "name": "claimS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "623:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_claim_$9_storage_$",
                            "typeString": "mapping(bytes32 => struct AgreementContract.claim storage ref)"
                          }
                        },
                        "id": 221,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "_claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "630:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "623:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_claim_$9_storage",
                          "typeString": "struct AgreementContract.claim storage ref"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bigchain_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "623:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "_newBigchain_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "656:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "623:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "623:50:3"
                }
              ]
            },
            "documentation": null,
            "id": 227,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addPoliceReport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "name": "_claimId",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "386:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 207,
                  "name": "_newBigchain_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "404:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:43:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:3"
            },
            "scope": 247,
            "src": "361:320:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "748:104:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "767:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "767:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 235,
                          "name": "policeAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "781:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "767:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        265,
                        266
                      ],
                      "referencedDeclaration": 265,
                      "src": "759:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "759:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "policeRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "804:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 241,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 240,
                        "name": "_newPoliceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "819:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "804:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "840:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "804:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "804:40:3"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addPoliceAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "_newPoliceAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "715:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "714:27:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:3"
            },
            "scope": 247,
            "src": "689:163:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 248,
        "src": "64:791:3"
      }
    ],
    "src": "0:857:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/jeshw/blockinsurance/contracts/blockinsurance/PoliceContract.sol",
    "exportedSymbols": {
      "PoliceContract": [
        247
      ]
    },
    "id": 248,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 183,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/C/Users/jeshw/blockinsurance/contracts/blockinsurance/AgreementContract.sol",
        "file": "./AgreementContract.sol",
        "id": 184,
        "nodeType": "ImportDirective",
        "scope": 248,
        "sourceUnit": 107,
        "src": "27:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 185,
              "name": "AgreementContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 106,
              "src": "91:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AgreementContract_$106",
                "typeString": "contract AgreementContract"
              }
            },
            "id": 186,
            "nodeType": "InheritanceSpecifier",
            "src": "91:17:3"
          }
        ],
        "contractDependencies": [
          106
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 247,
        "linearizedBaseContracts": [
          247,
          106
        ],
        "name": "PoliceContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 190,
            "name": "policeRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 247,
            "src": "117:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 189,
              "keyType": {
                "id": 187,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "126:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "117:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 188,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "137:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 193,
            "name": "policeAdmin",
            "nodeType": "VariableDeclaration",
            "scope": 247,
            "src": "171:64:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 191,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "171:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307863613335623764393135343538656635343061646536303638646665326634346538666137333065",
              "id": 192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "193:42:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1154414090619811796818182302139415280051214250766_by_1",
                "typeString": "int_const 1154...(41 digits omitted)...0766"
              },
              "value": "0xca35b7d915458ef540ade6068dfe2f44e8fa730e"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "265:88:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "policeRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "279:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 198,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "307863613335623764393135343538656635343061646536303638646665326634346538666137333362",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "294:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1154414090619811796818182302139415280051214250811_by_1",
                          "typeString": "int_const 1154...(41 digits omitted)...0811"
                        },
                        "value": "0xca35b7d915458ef540ade6068dfe2f44e8fa733b"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "279:58:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "340:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "279:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "279:65:3"
                }
              ]
            },
            "documentation": null,
            "id": 203,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "265:0:3"
            },
            "scope": 247,
            "src": "245:108:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "436:245:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 211,
                            "name": "policeRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "513:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 214,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 212,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "528:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "528:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "513:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "543:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "513:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        265,
                        266
                      ],
                      "referencedDeclaration": 265,
                      "src": "505:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "505:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 219,
                          "name": "claimS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "623:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_claim_$9_storage_$",
                            "typeString": "mapping(bytes32 => struct AgreementContract.claim storage ref)"
                          }
                        },
                        "id": 221,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "_claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "630:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "623:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_claim_$9_storage",
                          "typeString": "struct AgreementContract.claim storage ref"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bigchain_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "623:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "_newBigchain_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "656:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "623:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "623:50:3"
                }
              ]
            },
            "documentation": null,
            "id": 227,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addPoliceReport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "name": "_claimId",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "386:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 207,
                  "name": "_newBigchain_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "404:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:43:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:0:3"
            },
            "scope": 247,
            "src": "361:320:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "748:104:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "767:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "767:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 235,
                          "name": "policeAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "781:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "767:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        265,
                        266
                      ],
                      "referencedDeclaration": 265,
                      "src": "759:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "759:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "policeRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "804:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 241,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 240,
                        "name": "_newPoliceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "819:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "804:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "840:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "804:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "804:40:3"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addPoliceAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "_newPoliceAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "715:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "714:27:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:0:3"
            },
            "scope": 247,
            "src": "689:163:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 248,
        "src": "64:791:3"
      }
    ],
    "src": "0:857:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x9f544a3fc3d1045e6ec49d4ecef6dcd700457165",
      "transactionHash": "0x7c40144423e5b5e84467ee6c835bbf7f9ec601cfe12ad95561bfe53a51adea5b"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-10T18:04:32.812Z"
}
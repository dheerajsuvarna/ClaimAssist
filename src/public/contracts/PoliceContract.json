{
  "contractName": "PoliceContract",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimId",
          "type": "bytes32"
        },
        {
          "name": "_newBigchain_hash",
          "type": "bytes"
        }
      ],
      "name": "addPoliceReport",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040527375a3a98f5696299071da253c1433a2661898103e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50610315806100746000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063605a4dd214610046575b600080fd5b34801561005257600080fd5b506100bb6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506100bd565b005b33600115156000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663143d4233836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561017e57600080fd5b505af1158015610192573d6000803e3d6000fd5b505050506040513d60208110156101a857600080fd5b810190808051906020019092919050505015151415156101c757600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166309c4426984846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561027f578082015181840152602081019050610264565b50505050905090810190601f1680156102ac5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b505050505050505600a165627a7a72305820058a9da03bc8c250caeafcddac2a6aeb8c057146458f4a07b4639e09ba3db9d80029",
  "deployedBytecode": "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063605a4dd214610046575b600080fd5b34801561005257600080fd5b506100bb6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506100bd565b005b33600115156000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663143d4233836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561017e57600080fd5b505af1158015610192573d6000803e3d6000fd5b505050506040513d60208110156101a857600080fd5b810190808051906020019092919050505015151415156101c757600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166309c4426984846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561027f578082015181840152602081019050610264565b50505050905090810190601f1680156102ac5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b505050505050505600a165627a7a72305820058a9da03bc8c250caeafcddac2a6aeb8c057146458f4a07b4639e09ba3db9d80029",
  "sourceMap": "247:669:5:-;;;365:42;324:84;;;;;;;;;;;;;;;;;;;;247:669;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:669:5;;;;;;;",
  "deployedSourceMap": "247:669:5:-;;;;;;;;;;;;;;;;;;;;;;;;734:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;734:179:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:10;695:4;638:61;;:12;;;;;;;;;;;:26;;;665:25;638:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;638:53:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;638:53:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;638:53:5;;;;;;;;;;;;;;;;:61;;;630:70;;;;;;;;854:12;;;;;;;;;;;:23;;;878:8;887:17;854:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;854:51:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;854:51:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;854:51:5;;;;734:179;;;:::o",
  "source": "pragma solidity ^0.4.4;\r\n\r\nimport \"./ClaimStorage.sol\";\r\nimport \"./Claim.sol\";\r\n\r\n\r\n\r\n/// @title Examples of how to store and read a contract address in your dApps eternal storage for use in the hub / spoke pattern\r\n/// @author David Rugendyke\r\n\r\ncontract PoliceContract {\r\n\r\n    \r\n    /*** Contracts **************/\r\n\r\n    ClaimStorage claimStorage = ClaimStorage(0x75a3a98f5696299071da253c1433a2661898103e);         // The main ClaimAssist (The HUB) contract where primary persistant storage is maintained\r\n\r\n    /*** Modifiers ***********/    \r\n\r\n    modifier onlyRegisteredPolice(address _resgisteredPoliceAddress) {\r\n        require(claimStorage.getPoliceBool(_resgisteredPoliceAddress) == true);  \r\n        _;\r\n    }\r\n    \r\n    function addPoliceReport(bytes32 _claimId, bytes _newBigchain_hash ) public onlyRegisteredPolice(msg.sender) {\r\n        claimStorage.setNewHash(_claimId,_newBigchain_hash);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\dheer\\Documents\\BlockchainAPC\\blockinsurance\\contracts\\claimAssist\\PoliceContract.sol",
  "ast": {
    "absolutePath": "/C/Users/dheer/Documents/BlockchainAPC/blockinsurance/contracts/claimAssist/PoliceContract.sol",
    "exportedSymbols": {
      "PoliceContract": [
        649
      ]
    },
    "id": 650,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 607,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/dheer/Documents/BlockchainAPC/blockinsurance/contracts/claimAssist/ClaimStorage.sol",
        "file": "./ClaimStorage.sol",
        "id": 608,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 557,
        "src": "27:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/dheer/Documents/BlockchainAPC/blockinsurance/contracts/claimAssist/Claim.sol",
        "file": "./Claim.sol",
        "id": 609,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 82,
        "src": "57:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Examples of how to store and read a contract address in your dApps eternal storage for use in the hub / spoke pattern\r\n @author David Rugendyke\r",
        "fullyImplemented": true,
        "id": 649,
        "linearizedBaseContracts": [
          649
        ],
        "name": "PoliceContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 614,
            "name": "claimStorage",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "324:84:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ClaimStorage_$556",
              "typeString": "contract ClaimStorage"
            },
            "typeName": {
              "contractScope": null,
              "id": 610,
              "name": "ClaimStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 556,
              "src": "324:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimStorage_$556",
                "typeString": "contract ClaimStorage"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837356133613938663536393632393930373164613235336331343333613236363138393831303365",
                  "id": 612,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "365:42:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_671601712405543948272399379243257352645865115710_by_1",
                    "typeString": "int_const 6716...(40 digits omitted)...5710"
                  },
                  "value": "0x75a3a98f5696299071da253c1433a2661898103e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_671601712405543948272399379243257352645865115710_by_1",
                    "typeString": "int_const 6716...(40 digits omitted)...5710"
                  }
                ],
                "id": 611,
                "name": "ClaimStorage",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 556,
                "src": "352:12:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ClaimStorage_$556_$",
                  "typeString": "type(contract ClaimStorage)"
                }
              },
              "id": 613,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "352:56:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimStorage_$556",
                "typeString": "contract ClaimStorage"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "619:103:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 621,
                              "name": "_resgisteredPoliceAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "665:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 619,
                              "name": "claimStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 614,
                              "src": "638:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ClaimStorage_$556",
                                "typeString": "contract ClaimStorage"
                              }
                            },
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPoliceBool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 403,
                            "src": "638:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "638:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "695:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "638:61:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        667,
                        668
                      ],
                      "referencedDeclaration": 667,
                      "src": "630:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "630:70:5"
                },
                {
                  "id": 627,
                  "nodeType": "PlaceholderStatement",
                  "src": "713:1:5"
                }
              ]
            },
            "documentation": "* Modifiers **********",
            "id": 629,
            "name": "onlyRegisteredPolice",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "_resgisteredPoliceAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "584:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:35:5"
            },
            "src": "554:168:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "843:70:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 643,
                        "name": "_claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "878:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "_newBigchain_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "887:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 640,
                        "name": "claimStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "854:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimStorage_$556",
                          "typeString": "contract ClaimStorage"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setNewHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "854:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory) external"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "854:51:5"
                }
              ]
            },
            "documentation": null,
            "id": 648,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 636,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "831:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "831:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 638,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 635,
                  "name": "onlyRegisteredPolice",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 629,
                  "src": "810:20:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "810:32:5"
              }
            ],
            "name": "addPoliceReport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "_claimId",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "759:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "name": "_newBigchain_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "777:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "758:44:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:5"
            },
            "scope": 649,
            "src": "734:179:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 650,
        "src": "247:669:5"
      }
    ],
    "src": "0:916:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/dheer/Documents/BlockchainAPC/blockinsurance/contracts/claimAssist/PoliceContract.sol",
    "exportedSymbols": {
      "PoliceContract": [
        649
      ]
    },
    "id": 650,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 607,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/dheer/Documents/BlockchainAPC/blockinsurance/contracts/claimAssist/ClaimStorage.sol",
        "file": "./ClaimStorage.sol",
        "id": 608,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 557,
        "src": "27:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/dheer/Documents/BlockchainAPC/blockinsurance/contracts/claimAssist/Claim.sol",
        "file": "./Claim.sol",
        "id": 609,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 82,
        "src": "57:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Examples of how to store and read a contract address in your dApps eternal storage for use in the hub / spoke pattern\r\n @author David Rugendyke\r",
        "fullyImplemented": true,
        "id": 649,
        "linearizedBaseContracts": [
          649
        ],
        "name": "PoliceContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 614,
            "name": "claimStorage",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "324:84:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ClaimStorage_$556",
              "typeString": "contract ClaimStorage"
            },
            "typeName": {
              "contractScope": null,
              "id": 610,
              "name": "ClaimStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 556,
              "src": "324:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimStorage_$556",
                "typeString": "contract ClaimStorage"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837356133613938663536393632393930373164613235336331343333613236363138393831303365",
                  "id": 612,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "365:42:5",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_671601712405543948272399379243257352645865115710_by_1",
                    "typeString": "int_const 6716...(40 digits omitted)...5710"
                  },
                  "value": "0x75a3a98f5696299071da253c1433a2661898103e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_671601712405543948272399379243257352645865115710_by_1",
                    "typeString": "int_const 6716...(40 digits omitted)...5710"
                  }
                ],
                "id": 611,
                "name": "ClaimStorage",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 556,
                "src": "352:12:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ClaimStorage_$556_$",
                  "typeString": "type(contract ClaimStorage)"
                }
              },
              "id": 613,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "352:56:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimStorage_$556",
                "typeString": "contract ClaimStorage"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "619:103:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 621,
                              "name": "_resgisteredPoliceAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "665:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 619,
                              "name": "claimStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 614,
                              "src": "638:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ClaimStorage_$556",
                                "typeString": "contract ClaimStorage"
                              }
                            },
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPoliceBool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 403,
                            "src": "638:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "638:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "695:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "638:61:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        667,
                        668
                      ],
                      "referencedDeclaration": 667,
                      "src": "630:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "630:70:5"
                },
                {
                  "id": 627,
                  "nodeType": "PlaceholderStatement",
                  "src": "713:1:5"
                }
              ]
            },
            "documentation": "* Modifiers **********",
            "id": 629,
            "name": "onlyRegisteredPolice",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "_resgisteredPoliceAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "584:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:35:5"
            },
            "src": "554:168:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "843:70:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 643,
                        "name": "_claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "878:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "_newBigchain_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "887:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 640,
                        "name": "claimStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "854:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClaimStorage_$556",
                          "typeString": "contract ClaimStorage"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setNewHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 436,
                      "src": "854:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bytes memory) external"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "854:51:5"
                }
              ]
            },
            "documentation": null,
            "id": 648,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 636,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "831:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "831:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 638,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 635,
                  "name": "onlyRegisteredPolice",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 629,
                  "src": "810:20:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "810:32:5"
              }
            ],
            "name": "addPoliceReport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "_claimId",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "759:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "name": "_newBigchain_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "777:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "758:44:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:5"
            },
            "scope": 649,
            "src": "734:179:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 650,
        "src": "247:669:5"
      }
    ],
    "src": "0:916:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x4a5cd58b24e3bf04360b06bfeaf45a39aa8035b6",
      "transactionHash": "0xc262c49f8fadf189e92ff9979d429f4444d92153d94897fafa0b4d458b1576a1"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-16T15:42:43.478Z"
}